# Переменные для доступа к Git репозиторию с MD файлами
GIT_REPO_URL=

# Опционально: Путь к SSH ключу (если используется SSH аутентификация)
# GIT_SSH_KEY_PATH=

# Опционально: Токен доступа (если используется HTTPS аутентификация с токеном)
GIT_ACCESS_TOKEN=

# --- Supabase / PostgreSQL ---
SUPABASE_URL=
# Используйте ANON_KEY для клиентских операций или SERVICE_ROLE_KEY для серверных
SUPABASE_ANON_KEY=
# SUPABASE_SERVICE_ROLE_KEY=

# --- Qdrant ---
QDRANT_URL=http://localhost:6333
# QDRANT_API_KEY=your_qdrant_api_key_if_needed
# Имя коллекции Qdrant (согласно плану, она должна существовать)
QDRANT_COLLECTION_NAME= 

# --- OpenRouter API Settings ---
# Your API key from OpenRouter.ai
OPENROUTER_API_KEY=YOUR_OPENROUTER_API_KEY_HERE

# The specific LLM model on OpenRouter to use for generating Mermaid diagrams from images
# Example: "anthropic/claude-3-haiku", "google/gemini-flash-1.5", "mistralai/mistral-7b-instruct"
MERMAID_LLM_MODEL="anthropic/claude-3-haiku"

# The prompt template used to ask the LLM to generate a Mermaid diagram.
# {image_alt} and {image_src} will be replaced with the actual alt text and source path of the image.
# {context_before} and {context_after} provide surrounding text for context.
MERMAID_PROMPT_TEMPLATE="Based on the image description (alt text: '{image_alt}', source: '{image_src}') and the surrounding text (before: '{context_before}', after: '{context_after}'), generate a Mermaid diagram code block (using ```mermaid ... ``` syntax) that represents the information conveyed by the image. Focus on capturing the core meaning and relationships shown or implied. If the image is purely decorative or its content cannot be represented as a diagram, respond with 'SKIP'."

# --- Webhook Listener --- 
# Port for the HTTP server listening for webhook events
WEBHOOK_LISTENER_PORT=3000

# Secret used to validate incoming webhooks from GitHub/GitLab
# This MUST match the secret configured in the webhook settings on the Git provider
# WEBHOOK_SECRET=your_very_secret_webhook_token_here 